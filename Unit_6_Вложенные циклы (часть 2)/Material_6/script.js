
let out = document.querySelector('.out');
console.log(out);

// for (let i = 0; i < 5; i++) {
//     // i=0 - запускается внешний цикл один раз и потом крутится со значением i=0 или 1 или 2 и т.д. во внутреннем цикле необходимое кол-во раз, 
//     //по завершении цикла внутреннего, вновь со следующим значением запускается один раз внешний цикл и операция повторяется и так до победного 
//     for (let k = 0; k < 10; k++) {
//         // k=0 - работает внутренний цикл 10 раз, завершается и потом опять 10 раз, после прохождения внешнего цикла 1 раз, но с новым значением i
//         // out.innerHTML += '*'; 
//         out.innerHTML += k; // срабатывает внутренний цикл 10 раз - ставит 0123456789
//     }
//     out.innerHTML += ' '; // срабатывает внешний цикл один раз - ставит пробел
//     //out.innerHTML += '<br>'; - перенос строки
// }



for (let i = 1; i < 10; i++) {
    // out.innerHTML += '3*' + i + '=' + (i * 3) + '<br>'; // длинная строка(пример) - это конкатенация - это склеивание элементов в примере
    //out.innerHTML += `3*${i}=${3 * i}<br>`; // интерполяция внутри таких кавычек `` и ${...} - выполнение каких-либо операций вычисления
    // i =1
    // 1*2
    // 1*3
    for (let k = 1; k < 10; k++) {
        out.innerHTML += `${i}*${k}=${k * i}<br>`; // отработка внутреннего цикла 10 раз со значением 1 внешнего цикла, потом 2, потом 3 и т.д.
    }
    out.innerHTML += '<hr>';
}

// Оператор % работает как нормальный оператор возвращающий остаток от деления. При a % b a делится нацело на b и все что остается возвращается.
// Числа 1, 2, и 3 меньше 7, поэтому нацело они на 7 не делятся (результат их деления на 7 нацело равен нулю) и в остатке остаются сами числа
// 3%7= 0 остаток 3;
// 7%7 = 0 остаток 0;
